version: "3.9"

x-common-network: &common-network
  networks:
    - wiki-network

x-cassandra-common: &cassandra-common
  environment:
    - CASSANDRA_SEEDS=cassandra-node-1,cassandra-node-2
    - CASSANDRA_CLUSTER_NAME=WikiCluster

x-cassandra-health-check: &cassandra-health-check
  healthcheck:
    test: ["CMD-SHELL", "cqlsh -e 'DESCRIBE keyspaces;'"]
    interval: 5s
    timeout: 3s
    retries: 25

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    <<: *common-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      zookeeper:
        condition: service_started
    <<: *common-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics.sh --list --bootstrap-server kafka:9092 &> /dev/null",
        ]
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 3s

  kafka-setup:
    image: bitnami/kafka:latest
    container_name: kafka-setup
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ./services/create-topics.sh:/create-topics.sh
    entrypoint: ["/bin/bash", "/create-topics.sh"]
    <<: *common-network

  kafka-producer:
    image: kafka-producer
    build:
      context: services/producer
    container_name: kafka-producer
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - WIKI_EVENTS_TOPIC=wiki-events
    volumes:
      - ./services/producer:/opt/app
    <<: *common-network
    depends_on:
      kafka-setup:
        condition: service_completed_successfully

  cassandra-node-1:
    image: cassandra:latest
    container_name: cassandra-node-1
    ports:
      - "9042:9042"
    <<: *cassandra-common
    <<: *common-network
    <<: *cassandra-health-check

  cassandra-node-2:
    image: cassandra:latest
    container_name: cassandra-node-2
    depends_on:
      cassandra-node-1:
        condition: service_healthy
    <<: *cassandra-common
    <<: *common-network
    <<: *cassandra-health-check

  wiki-ddl:
    image: wiki-ddl
    build:
      context: services/wiki-ddl
    container_name: wiki-ddl
    volumes:
      - ./services/wiki-ddl:/code
    <<: *cassandra-common
    <<: *common-network
    depends_on:
      cassandra-node-1:
        condition: service_healthy

  rest-api:
    image: wiki-rest-api
    build:
      context: services
      dockerfile: rest_api/Dockerfile
    container_name: rest-api
    environment:
      - REST_API_PORT=1991
      - CASSANDRA_HOST=cassandra-node-1
      - CASSANDRA_PORT=9042
      - CASSANDRA_KEYSPACE=wikipedia
    ports:
      - "1991:1991"
    volumes:
      - ./services:/code/services
    <<: *common-network
    depends_on:
      cassandra-node-1:
        condition: service_healthy

  spark-master:
    image: docker.io/bitnami/spark:3.5.0
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - WIKI_EVENTS_TOPIC=wiki-events
      - CASSANDRA_HOST=cassandra-node-1
      - CASSANDRA_PORT=9042
    volumes:
      - ./services/streaming:/code/streaming
    command: ["/bin/bash", "/code/streaming/submit_streaming.sh"]
    depends_on:
      kafka-producer:
        condition: service_started
      cassandra-node-1:
        condition: service_healthy
    <<: *common-network

  spark-worker:
    image: docker.io/bitnami/spark:3.5.0
    container_name: spark-worker
    hostname: spark-worker
    ports:
      - "8081:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      spark-master:
        condition: service_started
    <<: *common-network

networks:
  wiki-network:
    driver: bridge
    name: wiki-network
